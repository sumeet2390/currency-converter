{"version":3,"sources":["images/repeat.svg","images/fa-angle-down.svg","constants/constants.js","action-types/actionTypes.js","actions/actions.js","helpers/currency-api.js","components/Panel.js","components/InputPanel.js","components/OutputPanel.js","components/LiveRate.js","components/LiveRateContainer.js","components/currency-selector/CurrencySelector.js","components/output-currency-dropdown/OutputCurrencyDropdown.js","components/input-currency-dropdown/InputCurrencyDropdown.js","components/header/Header.js","App.js","reducer/currency.js","reducer/index.js","index.js"],"names":["module","exports","SELECTIONS","RECALCULATE_IO","updateRates","dispatch","fetch","proxyurl","then","r","json","rates","EUR","type","updateFocus","focusArea","selected","Panel","onChange","event","test","target","value","substring","length","props","onFocus","className","this","placeholder","Component","InputPanel","connect","state","currency","values","IN","input","OutputPanel","OUT","output","LiveRate","src","repeat","alt","in","out","LiveRateContainer","toFixed","getSymbolFromCurrency","CurrencySelector","currencies","map","c","key","angle","OutputCurrencyDropdown","Object","keys","newCurrency","InputCurrencyDropdown","Header","DropdownWithInput","styled","div","App","initialState","convert","writeTo","converted","undefined","ob","combineReducers","action","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","rootReducer","setInterval","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15e782ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/repeat.e1241f4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fa-angle-down.b67dc766.svg\";","export const SELECTIONS = {\n  IN: \"IN\",\n  OUT: \"OUT\"\n};\n","export const CHANGE_SELECTED = \"currency/CHAANGE_SELECTED\";\nexport const CHANGE_INPUT = \"currency/CHANGE_INPUT\";\nexport const CHANGE_INPUT_CURRENCY = \"currency/CHANGE_INPUT_CURRENCY\";\nexport const CHANGE_OUTPUT = \"currency/CHANGE_OUTPUT\";\nexport const CHANGE_OUTPUT_CURRENCY = \"currency/CHANGE_OUTPUT_CURRENCY\";\nexport const UPDATE_RATES = \"currency/UPDATE_RATES\";\nexport const RECALCULATE_IO = \"currency/RECALCULATE_IO\";\n","import {\n  CHANGE_SELECTED,\n  CHANGE_INPUT,\n  CHANGE_INPUT_CURRENCY,\n  CHANGE_OUTPUT,\n  CHANGE_OUTPUT_CURRENCY,\n  UPDATE_RATES,\n  RECALCULATE_IO\n} from \"../action-types/actionTypes\";\n\nimport { fetchCurrencies } from \"../helpers/currency-api\";\n\nexport const updateRates = () => {\n  return dispatch => {\n    fetchCurrencies().then(rates =>\n      dispatch({\n        type: UPDATE_RATES,\n        rates: rates\n      })\n    );\n\n    dispatch({\n      type: RECALCULATE_IO\n    });\n  };\n};\n\nexport const updateFocus = focusArea => {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_SELECTED,\n      selected: focusArea\n    });\n  };\n};\n\nexport const updateInput = input => {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_INPUT,\n      input\n    });\n\n    dispatch({\n      type: RECALCULATE_IO\n    });\n  };\n};\n\nexport const updateOutput = output => {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_OUTPUT,\n      output\n    });\n\n    dispatch({\n      type: RECALCULATE_IO\n    });\n  };\n};\n\nexport const changeInputCurrency = newCurrency => {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_INPUT_CURRENCY,\n      value: newCurrency\n    });\n\n    dispatch({\n      type: RECALCULATE_IO\n    });\n  };\n};\nexport const changeOutputCurrency = newCurrency => {\n  return dispatch => {\n    dispatch({\n      type: CHANGE_OUTPUT_CURRENCY,\n      value: newCurrency\n    });\n\n    dispatch({\n      type: RECALCULATE_IO\n    });\n  };\n};\n","const proxyurl = \"http://cors-anywhere.herokuapp.com/\";\nconst apiKey = \"c90fed8c553b436b8f7e48d0659b6302\";\n\nexport const fetchCurrencies = () => {\n  return fetch(\n    proxyurl + \"https://openexchangerates.org/api/latest.json?app_id=\" + apiKey\n  )\n    .then(r => r.json())\n    .then(({ rates }) => {\n      rates.EUR = 1;\n      return rates;\n    });\n};\n// export const fetchCurrencies = () => {  //for development so that page doesn't refreshes on every change\n//   const data = {\n//     AED: 4.090534,\n//     AFN: 86.868099,\n//     ALL: 121.871509,\n//     AMD: 533.506798,\n//     ANG: 1.804307,\n//     AOA: 541.2864,\n//     ARS: 66.790491,\n//     AUD: 1.614458,\n//     AWG: 2.004678,\n//     AZN: 1.890772,\n//     BAM: 1.957157,\n//     BBD: 2.248804,\n//     BDT: 94.333225\n//   };\n//   return Promise.resolve(data);\n// };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Panel.css\";\n\nexport default class Panel extends Component {\n  onChange = event => {\n    let ex = /^\\d*(\\.\\d{0,2})?$/;\n    if (ex.test(event.target.value) === false) {\n      event.target.value = event.target.value.substring(\n        0,\n        event.target.value.length - 1\n      );\n    }\n    this.props.onChange(event.target.value);\n  };\n\n  onFocus = event => {\n    this.props.onFocus();\n  };\n\n  render() {\n    return (\n      <div\n        className={`panel ${\n          this.props.selected ? \"active-panel\" : \"inactive-panel\"\n        }`}\n      >\n        <input\n          onChange={this.onChange}\n          placeholder=\"0\"\n          value={this.props.value}\n          type=\"text\"\n          className=\"input\"\n          onFocus={this.onFocus}\n        />\n      </div>\n    );\n  }\n}\n\nPanel.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  value: PropTypes.any.isRequired\n};\n","import { connect } from \"react-redux\";\nimport { SELECTIONS } from \"../constants/constants\";\nimport { updateInput, updateFocus } from \"../actions/actions\";\nimport Panel from \"./Panel\";\n\nconst mapStateToProps = state => {\n  return {\n    value: state.currency.values.IN,\n    selected: state.currency.selected === SELECTIONS.IN\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: value => {\n      dispatch(updateInput(value));\n    },\n    onFocus: value => {\n      dispatch(updateFocus(SELECTIONS.IN));\n    }\n  };\n};\nconst InputPanel = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Panel);\n\nexport default InputPanel;\n","import { connect } from \"react-redux\";\nimport { SELECTIONS } from \"../constants/constants\";\nimport { updateOutput, updateFocus } from \"../actions/actions\";\nimport Panel from \"./Panel\";\n\nconst mapStateToProps = state => {\n  return {\n    value: state.currency.values.OUT,\n    selected: state.currency.selected === SELECTIONS.OUT\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: value => {\n      dispatch(updateOutput(value));\n    },\n    onFocus: value => {\n      dispatch(updateFocus(SELECTIONS.OUT));\n    }\n  };\n};\n\nconst OutputPanel = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Panel);\n\nexport default OutputPanel;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./LiveRate.css\";\nimport repeat from \"../images/repeat.svg\";\nexport default class LiveRate extends Component {\n  render() {\n    return (\n      <div className=\"LiveRate\">\n        <div className=\"bubble\">\n          <img src={repeat} className=\"icon\" alt=\"icon\" />\n          {this.props.in} = {this.props.out}\n        </div>\n      </div>\n    );\n  }\n}\n\nLiveRate.propTypes = {\n  in: PropTypes.string.isRequired,\n  out: PropTypes.string.isRequired\n};\n","import { connect } from \"react-redux\";\nimport LiveRate from \"./LiveRate\";\nimport getSymbolFromCurrency from \"currency-symbol-map\";\n\nconst mapStateToProps = ({ currency }) => {\n  // const currency = state.currency;\n  const out = (\n    currency.rates[currency.currency.OUT] / currency.rates[currency.currency.IN]\n  ).toFixed(3);\n\n  return {\n    in: `${getSymbolFromCurrency(currency.currency.IN)}1.00`,\n    out: `${getSymbolFromCurrency(currency.currency.OUT)}${\n      out !== \"NaN\" ? out : \"0.00\"\n    }`\n  };\n};\nconst LiveRateContainer = connect(mapStateToProps)(LiveRate);\n\nexport default LiveRateContainer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport angle from \"../../images/fa-angle-down.svg\";\nimport \"./CurrencySelector.css\";\n\nexport default class CurrencySelector extends Component {\n  onChange = event => {\n    // sent out just the numbers\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"CurrencySelector\">\n        <select value={this.props.value} onChange={this.onChange}>\n          {this.props.currencies.map(c => {\n            return (\n              <option key={c} value={c}>\n                {c}\n              </option>\n            );\n          })}\n        </select>\n        <div className=\"arrow\">\n          <img src={angle} alt=\"arrow\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrencySelector.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.any.isRequired,\n  currencies: PropTypes.array.isRequired\n};\n","import { connect } from \"react-redux\";\nimport { changeOutputCurrency } from \"../../actions/actions\";\nimport CurrencySelector from \"../currency-selector/CurrencySelector\";\n\nconst mapStateToProps = state => {\n  return {\n    value: state.currency.currency.OUT,\n    currencies: Object.keys(state.currency.rates)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: value => {\n      dispatch(changeOutputCurrency(value));\n    }\n  };\n};\nconst OutputCurrencyDropdown = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrencySelector);\n\nexport default OutputCurrencyDropdown;\n","import { connect } from \"react-redux\";\nimport { changeInputCurrency } from \"../../actions/actions\";\n// import CurrencySelector from \"../currency-selector/CurrencySelector\";\nimport CurrencySelector from \"../currency-selector/CurrencySelector\";\n\nconst mapStateToProps = state => {\n  return {\n    value: state.currency.currency.IN,\n    currencies: Object.keys(state.currency.rates)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: value => {\n      dispatch(changeInputCurrency(value));\n    }\n  };\n};\nconst InputCurrencyDropdown = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrencySelector);\n\nexport default InputCurrencyDropdown;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"logo\"></div>\n      <h2 className=\"title\">Currency Converter</h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport InputPanel from \"./components/InputPanel\";\nimport OutputPanel from \"./components/OutputPanel\";\nimport LiveRateContainer from \"./components/LiveRateContainer\";\n\nimport OutputCurrencyDropdown from \"./components/output-currency-dropdown/OutputCurrencyDropdown\";\nimport InputCurrencyDropdown from \"./components/input-currency-dropdown/InputCurrencyDropdown\";\nimport Header from \"./components/header/Header\";\n\nconst DropdownWithInput = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 10px;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"App\">\n          <LiveRateContainer />\n          <DropdownWithInput>\n            <InputCurrencyDropdown />\n            <InputPanel />\n          </DropdownWithInput>\n          <div className=\"separator\"></div>\n          <DropdownWithInput>\n            <OutputCurrencyDropdown />\n            <OutputPanel />\n          </DropdownWithInput>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { SELECTIONS } from \"../constants/constants\";\nimport {\n  CHANGE_SELECTED,\n  CHANGE_INPUT,\n  CHANGE_INPUT_CURRENCY,\n  CHANGE_OUTPUT,\n  CHANGE_OUTPUT_CURRENCY,\n  UPDATE_RATES,\n  RECALCULATE_IO\n} from \"../action-types/actionTypes\";\n\nconst initialState = {\n  values: {\n    IN: 0,\n    OUT: 0\n  },\n  currency: {\n    IN: \"EUR\",\n    OUT: \"GBP\"\n  },\n  selected: SELECTIONS.IN,\n  rates: []\n};\n\nconst convert = ({ rates, values, currency, selected }) => {\n  const writeTo = selected === SELECTIONS.IN ? SELECTIONS.OUT : SELECTIONS.IN,\n    resultRate = rates[currency[writeTo]],\n    selectedRate =\n      rates[currency[selected]] !== undefined ? rates[currency[selected]] : 0,\n    selectedValue = values[selected];\n\n  const converted = ((resultRate / selectedRate) * selectedValue).toFixed(2);\n\n  // Convert if input value is set\n  let ob = {};\n  ob[writeTo] = converted !== \"NaN\" ? converted : 0.0;\n  return ob;\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SELECTED:\n      return {\n        ...state,\n        selected: action.selected\n      };\n\n    case CHANGE_INPUT:\n      return {\n        ...state,\n        values: { ...state.values, IN: action.input }\n      };\n\n    case CHANGE_OUTPUT:\n      return {\n        ...state,\n        values: { ...state.values, OUT: action.output }\n      };\n\n    case CHANGE_INPUT_CURRENCY:\n      return {\n        ...state,\n        currency: { ...state.currency, IN: action.value }\n      };\n\n    case CHANGE_OUTPUT_CURRENCY:\n      return {\n        ...state,\n        currency: { ...state.currency, OUT: action.value }\n      };\n\n    case RECALCULATE_IO:\n      return {\n        ...state,\n        values: { ...state.values, ...convert(state) }\n      };\n\n    case UPDATE_RATES:\n      return {\n        ...state,\n        rates: action.rates\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport currency from \"./currency\";\n\nexport default combineReducers({\n  currency\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\nimport { updateRates } from \"./actions/actions\";\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n);\n\nconst store = createStore(rootReducer, initialState, composedEnhancers);\n\nstore.dispatch(updateRates());\nsetInterval(() => {\n  store.dispatch(updateRates());\n}, 10 * 1000); // refresh every 10 secs\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}